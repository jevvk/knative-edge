apiVersion: apps/v1
kind: Deployment
metadata:
  name: knative-edge-operator
  namespace: default
  labels:
    service: knative-edge
    control-plane: operator
spec:
  selector:
    matchLabels:
      service: knative-edge
      control-plane: operator
  replicas: 1
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: knative-edge-operator
      labels:
        service: knative-edge
        control-plane: operator
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
      - name: operator
        args:
        - --proxy-image
        - ko://edge.jevv.dev/cmd/proxy
        - --controller-image
        - ko://edge.jevv.dev/cmd/controller
        image: ko://edge.jevv.dev/cmd/operator
        imagePullPolicy: IfNotPresent
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - "ALL"
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        # TODO(user): Configure the resources accordingly based on the project requirements.
        # More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 16Mi
      serviceAccountName: knative-edge-operator
      terminationGracePeriodSeconds: 10
